import React from 'react';
import { motion } from 'framer-motion';
import { 
  FiCheck, FiGlobe, FiLayers, FiSmartphone, 
  FiZap, FiCode, FiFileText, FiPaperclip,
  FiCircle, FiServer, FiShoppingCart, FiCpu,
  FiPackage, FiShield, FiTriangle, FiFeather
} from 'react-icons/fi';




const PricingDetails = ({ formData }) => {
  const hasData = !(
    formData.websiteTypes.length === 0 &&
    formData.numberOfPages === '' &&
    !formData.wantDomain &&
    formData.pages.length === 0 &&
    !formData.responsive &&
    formData.specialRequirements.length === 0 &&
    formData.technologies.length === 0 &&
    formData.extraRequirements === '' &&
    !formData.attachment
  );

  const getIconForType = (type) => {
    switch(type) {
      case 'Static Website': return <FiGlobe className="text-indigo-500" />;
      case 'Dynamic Website': return <FiZap className="text-indigo-500" />;
      case 'Corporate Website': return <FiLayers className="text-indigo-500" />;
      case 'One Page Site': return <FiFileText className="text-indigo-500" />;
      case 'E-Commerce': return <FiShoppingCart className="text-indigo-500" />;
      default: return <FiCircle className="text-indigo-500" />;
    }
  };

  const getIconForTech = (tech) => {
    switch(tech) {
      case 'React': return <FiCpu className="text-indigo-500" />;
      case 'WordPress': return <FiPackage className="text-indigo-500" />;
      case 'Shopify': return <FiShoppingBag className="text-indigo-500" />;
      case 'Custom HTML/CSS/JS': return <FiCode className="text-indigo-500" />;
      case 'Node.js': return <FiServer className="text-indigo-500" />;
      case 'Vue.js': return <FiTriangle className="text-indigo-500" />;
      case 'Angular': return <FiFeather className="text-indigo-500" />;
      case 'Laravel': return <FiShield className="text-indigo-500" />;
      default: return <FiCode className="text-indigo-500" />;
    }
  };

  const getIconForPage = (page) => {
    switch(page) {
      case 'Home': return <FiHome className="text-indigo-500" />;
      case 'About Us': return <FiUsers className="text-indigo-500" />;
      case 'Services': return <FiSettings className="text-indigo-500" />;
      case 'Contact': return <FiMail className="text-indigo-500" />;
      case 'Blog': return <FiBook className="text-indigo-500" />;
      case 'Portfolio': return <FiImage className="text-indigo-500" />;
      case 'Shop': return <FiShoppingBag className="text-indigo-500" />;
      case 'FAQ': return <FiHelpCircle className="text-indigo-500" />;
      case 'Testimonials': return <FiAward className="text-indigo-500" />;
      case 'Pricing': return <FiDollarSign className="text-indigo-500" />;
      default: return <FiFileText className="text-indigo-500" />;
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 10 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.3 } }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-indigo-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-4xl mx-auto">
        <motion.div 
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          className="bg-white rounded-3xl shadow-xl overflow-hidden"
        >
          <div className="p-8 md:p-10">
            <motion.h3 
              className="text-3xl md:text-4xl font-bold text-center mb-8 bg-clip-text text-transparent bg-gradient-to-r from-indigo-600 to-purple-600"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 0.1 }}
            >
              Your Project Specifications
            </motion.h3>

            {!hasData ? (
              <motion.p 
                className="text-gray-500 text-lg text-center font-light italic py-12"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.2 }}
              >
                Start by selecting your requirements to see your project details
              </motion.p>
            ) : (
              <div className="space-y-8">
                {/* Website Types */}
                {formData.websiteTypes.length > 0 && (
                  <motion.div
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    className="bg-indigo-50/30 rounded-xl p-6"
                  >
                    <h4 className="text-xl font-semibold text-indigo-700 mb-4 flex items-center gap-2">
                      <FiGlobe />
                      Website Type
                    </h4>
                    <ul className="grid grid-cols-1 sm:grid-cols-2 gap-3">
                      {formData.websiteTypes.map((type) => (
                        <motion.li 
                          key={type}
                          variants={itemVariants}
                          className="flex items-center text-gray-700 text-lg bg-white p-3 rounded-lg border border-gray-200"
                        >
                          <span className="mr-3">{getIconForType(type)}</span>
                          {type}
                        </motion.li>
                      ))}
                    </ul>
                  </motion.div>
                )}

                {/* Pages Configuration */}
                {(formData.numberOfPages || formData.pages.length > 0) && (
                  <motion.div
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    className="bg-indigo-50/30 rounded-xl p-6"
                  >
                    <h4 className="text-xl font-semibold text-indigo-700 mb-4 flex items-center gap-2">
                      <FiLayers />
                      Pages Configuration
                    </h4>
                    
                    {formData.numberOfPages && (
                      <div className="mb-4">
                        <p className="text-gray-700 text-lg">
                          <span className="font-semibold text-indigo-600">Total Pages:</span> {formData.numberOfPages}
                        </p>
                      </div>
                    )}

                    {formData.pages.length > 0 && (
                      <div>
                        <p className="text-gray-700 text-lg mb-2">
                          <span className="font-semibold text-indigo-600">Included Pages:</span>
                        </p>
                        <ul className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2">
                          {formData.pages.map((page) => (
                            <motion.li 
                              key={page}
                              variants={itemVariants}
                              className="flex items-center text-gray-700 text-sm bg-white p-2 rounded-lg border border-gray-200"
                            >
                              <span className="mr-2">{getIconForPage(page)}</span>
                              {page}
                            </motion.li>
                          ))}
                        </ul>
                      </div>
                    )}
                  </motion.div>
                )}

                {/* Features */}
                {(formData.wantDomain || formData.responsive || formData.specialRequirements.length > 0) && (
                  <motion.div
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    className="bg-indigo-50/30 rounded-xl p-6"
                  >
                    <h4 className="text-xl font-semibold text-indigo-700 mb-4 flex items-center gap-2">
                      <FiZap />
                      Features
                    </h4>
                    
                    <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                      {formData.wantDomain && (
                        <motion.div
                          variants={itemVariants}
                          className="bg-white p-4 rounded-lg border border-gray-200 flex items-center"
                        >
                          <FiGlobe className="text-indigo-500 mr-3" />
                          <div>
                            <p className="font-medium text-gray-800">Custom Domain</p>
                            <p className="text-sm text-gray-500">Included in project</p>
                          </div>
                        </motion.div>
                      )}
                      
                      {formData.responsive && (
                        <motion.div
                          variants={itemVariants}
                          className="bg-white p-4 rounded-lg border border-gray-200 flex items-center"
                        >
                          <FiSmartphone className="text-indigo-500 mr-3" />
                          <div>
                            <p className="font-medium text-gray-800">Responsive Design</p>
                            <p className="text-sm text-gray-500">Mobile-friendly</p>
                          </div>
                        </motion.div>
                      )}
                      
                      {formData.specialRequirements.map((req) => (
                        <motion.div
                          key={req}
                          variants={itemVariants}
                          className="bg-white p-4 rounded-lg border border-gray-200 flex items-center"
                        >
                          {req === 'SEO Friendly' && <FiSearch className="text-indigo-500 mr-3" />}
                          {req === 'On Page SEO' && <FiBarChart2 className="text-indigo-500 mr-3" />}
                          {req === 'Social Media Linking' && <FiShare2 className="text-indigo-500 mr-3" />}
                          {req === 'Analytics Integration' && <FiPieChart className="text-indigo-500 mr-3" />}
                          {req === 'Contact Form' && <FiMail className="text-indigo-500 mr-3" />}
                          <div>
                            <p className="font-medium text-gray-800">{req}</p>
                          </div>
                        </motion.div>
                      ))}
                    </div>
                  </motion.div>
                )}

                {/* Tech Stack */}
                {formData.technologies.length > 0 && (
                  <motion.div
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    className="bg-indigo-50/30 rounded-xl p-6"
                  >
                    <h4 className="text-xl font-semibold text-indigo-700 mb-4 flex items-center gap-2">
                      <FiCode />
                      Technology Stack
                    </h4>
                    <div className="flex flex-wrap gap-3">
                      {formData.technologies.map((tech) => (
                        <motion.div
                          key={tech}
                          variants={itemVariants}
                          className="flex items-center bg-white px-4 py-2 rounded-full border border-gray-200"
                        >
                          <span className="mr-2">{getIconForTech(tech)}</span>
                          <span className="text-gray-700">{tech}</span>
                        </motion.div>
                      ))}
                    </div>
                  </motion.div>
                )}

                {/* Additional Info */}
                {(formData.extraRequirements || formData.attachment) && (
                  <motion.div
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    className="bg-indigo-50/30 rounded-xl p-6"
                  >
                    <h4 className="text-xl font-semibold text-indigo-700 mb-4 flex items-center gap-2">
                      <FiFileText />
                      Additional Information
                    </h4>
                    
                    {formData.extraRequirements && (
                      <div className="mb-4 bg-white p-4 rounded-lg border border-gray-200">
                        <p className="font-semibold text-indigo-600 mb-2">Special Notes:</p>
                        <p className="text-gray-700 whitespace-pre-line">{formData.extraRequirements}</p>
                      </div>
                    )}
                    
                    {formData.attachment && (
                      <div className="bg-white p-4 rounded-lg border border-gray-200 flex items-center">
                        <FiPaperclip className="text-indigo-500 mr-3" />
                        <div>
                          <p className="font-medium text-gray-800">Attached File</p>
                          <p className="text-sm text-gray-500">{formData.attachment.name}</p>
                        </div>
                      </div>
                    )}
                  </motion.div>
                )}
              </div>
            )}
          </div>

          {hasData && (
            <div className="bg-indigo-50 px-8 py-6 border-t border-indigo-100">
              <div className="flex flex-col sm:flex-row justify-between items-center gap-4">
                <div className="text-lg font-medium text-gray-700">
                  Ready to start your project?
                </div>
                <button className="px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-lg text-white font-semibold hover:from-indigo-600 hover:to-purple-700 transition-all duration-200 shadow-md hover:shadow-lg flex items-center gap-2">
                  <FiCheck className="w-5 h-5" />
                  Confirm Specifications
                </button>
              </div>
            </div>
          )}
        </motion.div>
      </div>
    </div>
  );
};

export default PricingDetails;
